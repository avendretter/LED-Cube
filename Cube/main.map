Archive member included because of file (symbol)

/usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

i                   0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
LOAD main.o
START GROUP
LOAD /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libm.a
LOAD /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x394
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000026       0x12 main.o
                0x0000000000000038                . = ALIGN (0x2)
                0x0000000000000038                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000038        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000038                __trampolines_end = .
 *(.progmem*)
                0x0000000000000038                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000038                __ctors_start = .
 *(.ctors)
                0x0000000000000038                __ctors_end = .
                0x0000000000000038                __dtors_start = .
 *(.dtors)
                0x0000000000000038                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000038        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000038                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000038        0xc /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000044       0x10 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000058                __vector_18
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
                0x0000000000000058                __vector_1
 .text          0x000000000000005a      0x12e main.o
                0x000000000000005a                setPort
                0x00000000000000f0                resetarray
                0x000000000000010a                reset
                0x0000000000000128                set
 .text          0x0000000000000188        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000188        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000188                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000188      0x208 main.o
                0x0000000000000188                main
 .text.libgcc.mul
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000390                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000390        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
                0x0000000000000390                exit
                0x0000000000000390                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000390        0x4 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000394                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000394
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x7
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800060        0x6 main.o
                0x0000000000800060                LED
 .bss           0x0000000000800066        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800066        0x0 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800066        0x1 main.o
                0x0000000000800066                i
                0x0000000000800067                PROVIDE (__bss_end, .)
                0x0000000000000394                __data_load_start = LOADADDR (.data)
                0x0000000000000394                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800067        0x0
                0x0000000000800067                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800067                PROVIDE (__noinit_end, .)
                0x0000000000800067                _end = .
                0x0000000000800067                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x68
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000048       0x20 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xf96
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_info    0x000000000000048c      0x9d6 main.o
 .debug_info    0x0000000000000e62       0x9a /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_info    0x0000000000000efc       0x9a /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_abbrev   0x0000000000000000      0x6a6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_abbrev  0x000000000000044e      0x230 main.o
 .debug_abbrev  0x000000000000067e       0x14 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_abbrev  0x0000000000000692       0x14 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_line     0x0000000000000000      0x31a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_line    0x000000000000001d      0x241 main.o
 .debug_line    0x000000000000025e       0x5b /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_exit.o)
 .debug_line    0x00000000000002b9       0x61 /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/avr4/libgcc.a(_clear_bss.o)

.debug_frame    0x0000000000000000       0x64
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x64 main.o

.debug_str      0x0000000000000000      0x286
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/local/Cellar/avr-gcc/4.8.3/lib/gcc/avr/4.8.3/../../../../avr/lib/avr4/crtm8.o
 .debug_str     0x000000000000017a      0x10c main.o
                                        0x145 (size before relaxing)

.debug_loc      0x0000000000000000      0x5bd
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x5bd main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0xd8
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0xd8 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
